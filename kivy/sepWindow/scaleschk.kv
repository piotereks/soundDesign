#: kivy 1.10.0
#: import CardTransition kivy.uix.screenmanager.CardTransition
#: import NoTransition kivy.uix.screenmanager.NoTransition
#: import FadeTransition kivy.uix.screenmanager.FadeTransition
#: import RiseInTransition kivy.uix.screenmanager.RiseInTransition


<MySpinnerOption@SpinnerOption>:
    background_color: color_button if self.state == 'down' else color_button_pressed
    background_down: 'atlas://data/images/defaulttheme/button'
    color: color_font
    height: self.texture_size[1]*1.5
    size_hint: [2.5, None]
    # sync_height: True
    # size: [-(-self.texture_size[0]//20)*20+10,self.texture_size[1]*1]

<RadioButton>:
    orientation:'horizontal'

    ToggleButton:
        text:self.parent.text if self.parent.text else 'X'
        size_hint: [None, None]
        # size: [round(self.texture_size[0]/5,-1)*5+30,self.texture_size[1]*2]
        # size: [-(-self.texture_size[0]//20)*20+10,self.texture_size[1]*2]
        size: [100,self.texture_size[1]*2]
        group:'keys'
        state: self.parent.state
        on_press: 
            # print('----------asdfasfasd----------' + self.parent.text)
            app.root.ids.scales_opt.rem_buttons()
            app.selected_root_note = self.parent.text
            app.root.current='main_screen'
            app.selected_scale_button = self.parent.text
            # TODO check if can be done without variable

ScreenManager:
    id: screen_manager
    transition: NoTransition()

    MainScreen:
        id: main_scr
        name: 'main_screen'
        manager: 'screen_manager'
    ScalesSelectScreen:
        id: scales_opt
        name: 'scales_option'
        manager: 'screen_manager'



<MainScreen>:
	BoxLayout:
		# Button:
		# 	text: "Go to Screen 2"
		# 	on_press:   
        #         app.root.current='scales_option'
        #         app.root.transition=FadeTransition()
        #     	app.root.transition.direction = 'left'
		# 		app.root.transition.duration = 1



        Button:
            id:scale_spinner
            text: 'scales select'
            # text: app.scale_init_text  if app.scale_init_text else 'Python'
            # values: app.scale_values if app.scale_values else ('Python', 'C', 'C++', 'Java','Python', 'C', 'C++', 'Java','Python', 'C', 'C++', 'Java','Python', 'C', 'C++', 'Java','Python', 'C', 'C++', '123Java','Python', 'C', 'C++', 'Java','Python', 'C', 'C++', 'Java') 
            size_hint: [2.5, None]
            # size_height
            size: [round(self.texture_size[0],-1)+30,self.texture_size[1]*2]
            # option_cls: Factory.get("MySpinnerOption")
            # on_text : app.set_scale(*args)
            on_press:   
                print('=====on_press')
                app.root.current='scales_option'
                app.root.ids.scales_opt.populate_button()
               
                # app.on_start()


<ScalesSelectScreen>:
	BoxLayout:
        Button:
            id: prev_page
            text: 'prev'
            size_hint_x: 0.5
            on_release :
                root.scale_page('prev') 
                # app.rem_buttons()
                # app.but_id_offset = app.but_id_offset-app.grid_len if app.but_id_offset-app.grid_len>0 else 0
                # app.populate_button()
        GridLayout:
            id: button_grid
            size_hint_x: 6
            
            cols: app.grid_cols
            rows: app.grid_rows
            row_force_default: True 
            row_default_height: 40

            # RadioButton:
            #     text: "scales option"
            #     on_press: 
            #         app.root.current='main_screen'
            #         app.root.transition: NoTransition()
            #         app.root.transition.direction = 'up'
            #         app.root.transition.duration = 0.5
            # RadioButton:
            #     text: "scales option"
            #     on_press: 
            #         app.root.current='main_screen'
            #         app.root.transition: NoTransition()
            #         app.root.transition.direction = 'up'
            #         app.root.transition.duration = 0.5
            # RadioButton:
            #     text: "scales option"
            #     on_press: 
            #         app.root.current='main_screen'
            #         app.root.transition: NoTransition()
            #         app.root.transition.direction = 'up'
            #         app.root.transition.duration = 0.5
            # RadioButton:
            #     text: "scales option"
            #     on_press: 
            #         app.root.current='main_screen'
            #         app.root.transition: NoTransition()
            #         app.root.transition.direction = 'up'
            #         app.root.transition.duration = 0.5
            # RadioButton:
            #     text: "scales option"
            #     on_press: 
            #         app.root.current='main_screen'
            #         app.root.transition: NoTransition()
            #         app.root.transition.direction = 'up'
            #         app.root.transition.duration = 0.5
            # RadioButton:
            #     text: "scales option"
            #     on_press: 
            #         app.root.current='main_screen'
            #         app.root.transition: NoTransition()
            #         app.root.transition.direction = 'up'
            #         app.root.transition.duration = 0.5
            # RadioButton:
            #     text: "scales option"
            #     on_press: 
            #         app.root.current='main_screen'
            #         app.root.transition: NoTransition()
            #         app.root.transition.direction = 'up'
            #         app.root.transition.duration = 0.5


        Button:
            id: next_page
            text: 'next'
            size_hint_x: 0.5
            on_release : 
                root.scale_page('next')
                # app.rem_buttons()
                # app.but_id_offset = app.but_id_offset+app.grid_len if app.but_id_offset+app.grid_len<app.nbr_of_scales else app.but_id_offset
                # app.populate_button()

